{"version":3,"file":"static/js/257.f30a1a59.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\nexport const GoBackLink = styled(Link)`\n  display: inline-block;\n  padding: 8px 12px;\n  margin-bottom: 10px;\n  text-decoration: none;\n  color: black;\n  background-color: gainsboro;\n  border-radius: 5px;\n  transition: background-color 0.3s ease-in-out;\n\n  :hover,\n  :focus {\n    background-color: blue;\n    color: white;\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: 100%;\n  height: 100%;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  align-self: flex-start;\n\n  @media screen and (max-width: 768px) {\n    max-height: 450px;\n    align-self: center;\n  }\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-self: flex-start;\n  padding: 10px 20px;\n\n  @media screen and (max-width: 768px) {\n    padding: 10px 0;\n  }\n`;\nexport const MovieTitle = styled.h2`\n  margin-top: 10px;\n  font-size: 2rem;\n  font-weight: 700;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.5rem;\n  }\n`;\n\nexport const UserScore = styled.div`\n  font-size: 1.5rem;\n  font-weight: 500;\n  margin: 10px 0;\n  display: flex;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const GenresTitle = styled.h3`\n  margin: 15px 0 5px 0;\n  font-size: 1.5rem;\n  font-weight: 500;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const Genres = styled.p`\n  margin: 5px 0;\n  font-size: 1rem;\n  font-weight: 400;\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const OverviewTitle = styled.h3`\n  margin: 15px 0 5px 0;\n  font-size: 1.5rem;\n  font-weight: 500;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.2rem;\n  }\n`;\n\nexport const OverviewContent = styled.p`\n  margin: 5px 0;\n  font-size: 1rem;\n  font-weight: 400;\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.8rem;\n  }\n`;\n\nexport const ListOfLinks = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n  list-style: none;\n  margin: 10px 0;\n`;\n\nexport const InfoLink = styled(Link)`\n  display: inline-block;\n  padding: 8px 12px;\n  text-decoration: none;\n  color: black;\n  background-color: gainsboro;\n  border-radius: 5px;\n  transition: background-color 0.3s ease-in-out;\n\n  :hover,\n  :focus {\n    background-color: blue;\n    color: white;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/movie-api';\nimport { useState, useEffect, useRef } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport {\n  GoBackLink,\n  MovieTitle,\n  MovieWrapper,\n  MoviePoster,\n  UserScore,\n  ListOfLinks,\n  InfoLink,\n  Info,\n  OverviewTitle,\n  OverviewContent,\n  Genres,\n  GenresTitle,\n  Container,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { Id } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieDetails(Id);\n        setMovieInfo(result);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadMovieDetails();\n  }, [Id]);\n\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n    movieInfo;\n  const genresInfo = genres?.map(genre => genre.name).join(', ');\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <Container>\n          {isLoading && <Loader />}\n          <GoBackLink to={backLinkLocationRef.current}>Go Back</GoBackLink>\n          <MovieWrapper>\n            <MoviePoster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n              }\n              alt={title}\n              height=\"500\"\n            />\n            <Info>\n              <MovieTitle>\n                {title}(\n                {release_date?.slice(0, 4)\n                  ? release_date?.slice(0, 4)\n                  : 'Unknown'}\n                )\n              </MovieTitle>\n              <UserScore>\n                User score: {Math.round(vote_average * 10)}%\n              </UserScore>\n              <GenresTitle>Genres</GenresTitle>\n              <Genres>{genresInfo ? genresInfo : 'Unknown genre'}</Genres>\n              <OverviewTitle>Overview</OverviewTitle>\n              <OverviewContent>{overview}</OverviewContent>\n            </Info>\n          </MovieWrapper>\n          <ListOfLinks>\n            <li>\n              <InfoLink to=\"cast\">Cast</InfoLink>\n            </li>\n            <li>\n              <InfoLink to=\"reviews\">Reviews</InfoLink>\n            </li>\n          </ListOfLinks>\n\n          <Outlet />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92d66af10495782dbf7116658cb2e14f';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    console.log(response.data.results);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '92d66af10495782dbf7116658cb2e14f',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Container","styled","GoBackLink","Link","MovieWrapper","MoviePoster","Info","MovieTitle","UserScore","GenresTitle","Genres","OverviewTitle","OverviewContent","ListOfLinks","InfoLink","Id","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","useEffect","loadMovieDetails","fetchMovieDetails","result","title","release_date","poster_path","vote_average","overview","genres","genresInfo","map","genre","name","join","Loader","to","current","src","alt","height","slice","Math","round","BASE_URL","API_KEY","fetchTrendingMovies","page","url","axios","response","console","log","data","results","fetchMoviesByName","query","searchParams","URLSearchParams","api_key","include_adult","id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}