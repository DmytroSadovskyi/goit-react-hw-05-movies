{"version":3,"file":"static/js/415.0ea14b72.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","pages/Home.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  text-align: center;\n\n  @media screen and (min-width: 320px) {\n    width: 320px;\n    padding-left: 20px;\n    padding-right: 20px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 1280px;\n    padding-left: 32px;\n    padding-right: 32px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n","import { Wrapper } from './Container.styled';\n\nexport const Container = ({ children }) => <Wrapper>{children}</Wrapper>;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n`;\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  @media screen and (min-width: 320px) {\n    gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    gap: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    column-gap: 16px;\n    row-gap: 32px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  min-width: 280px;\n\n  @media screen and (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n  @media screen and (min-width: 1280px) {\n    width: calc((100% - 2 * 16px) / 3);\n  }\n`;\nexport const Wrapper = styled.div`\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  box-shadow: 0px 0px 10px rgba(255, 255, 255, 0);\n  transition: box-shadow 0.3s ease-in-out;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.8);\n  }\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 280px;\n  height: 398px;\n  margin-bottom: 8px;\n  border-radius: 5px;\n  overflow: hidden;\n\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\n    width: 336px;\n    height: 455px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    height: 574px;\n    margin-bottom: 12px;\n  }\n`;\n\nexport const Text = styled.p`\n  text-decoration: none;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  List,\n  ListItem,\n  Wrapper,\n  Image,\n  StyledLink,\n  Text,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ poster_path, title, id }) => (\n        <ListItem key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            <Wrapper>\n              <Image\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n                }\n                alt={title}\n              />\n              <Text>{title}</Text>\n            </Wrapper>\n          </StyledLink>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\nimport ReactPaginate from 'react-paginate';\n\nexport const StyledReactPaginate = styled(ReactPaginate)`\n  display: flex;\n  flex-wrap: nowrap;\n  padding: 0;\n  margin-bottom: 30px;\n  color: blue;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n\n  @media screen and (min-width: 768px) {\n    gap: 5px;\n  }\n  .previous {\n    padding: 2px;\n    @media screen and (min-width: 768px) {\n      padding: 5px;\n    }\n\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .next {\n    padding: 2px;\n    @media screen and (min-width: 768px) {\n      padding: 5px;\n    }\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .page {\n    padding: 2px;\n    @media screen and (min-width: 768px) {\n      padding: 5px;\n    }\n    background-color: gainsboro;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n\n  .disabled {\n    color: grey;\n  }\n  .active {\n    background-color: blue;\n    color: white;\n  }\n`;\n","import { StyledReactPaginate } from './Pagination.styled';\n\nconst Pagination = ({ pageCount, onPageChange }) => {\n  return (\n    <StyledReactPaginate\n      previousLabel=\"<\"\n      nextLabel=\">\"\n      breakLabel=\"...\"\n      breakClassName=\"break-me\"\n      pageCount={pageCount}\n      onPageChange={onPageChange}\n      renderOnZeroPageCount={null}\n      containerClassName=\"pagination\"\n      pageClassName=\"page\"\n      activeClassName=\"active\"\n      pageRangeDisplayed={3}\n      marginPagesDisplayed={3}\n    />\n  );\n};\n\nexport default Pagination;\n","import { useState, useEffect } from 'react';\nimport Pagination from 'components/Pagination/Pagination';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { fetchTrendingMovies } from 'services/movie-api';\nimport Loader from 'components/Loader/Loader';\nimport { Container } from 'components/Container/Container';\n\nconst Home = () => {\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovies = async page => {\n      try {\n        setIsLoading(true);\n        const { results, total_pages } = await fetchTrendingMovies(page);\n        setMovies(results);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadMovies(page);\n  }, [page]);\n\n  const handlePageChange = ({ selected }) => {\n    setPage(selected + 1);\n    const startIndex = selected * 20;\n    const endIndex = startIndex + 20;\n    setMovies(movies.slice(startIndex, endIndex));\n  };\n\n  return (\n    <main>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <Container>\n          <h1>Tranding movies</h1>\n          {isLoading && <Loader />}\n          <MoviesList movies={movies} />\n          <Pagination pageCount={totalPages} onPageChange={handlePageChange} />\n        </Container>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92d66af10495782dbf7116658cb2e14f';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    console.log(response.data.results);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '92d66af10495782dbf7116658cb2e14f',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Wrapper","styled","Container","children","StyledLink","Link","List","ListItem","Image","Text","movies","location","useLocation","map","poster_path","title","id","to","state","from","src","alt","StyledReactPaginate","ReactPaginate","pageCount","onPageChange","previousLabel","nextLabel","breakLabel","breakClassName","renderOnZeroPageCount","containerClassName","pageClassName","activeClassName","pageRangeDisplayed","marginPagesDisplayed","useState","page","setPage","totalPages","setTotalPages","isLoading","setIsLoading","setMovies","error","setError","useEffect","loadMovies","fetchTrendingMovies","results","total_pages","selected","startIndex","endIndex","slice","BASE_URL","API_KEY","url","axios","response","console","log","data","fetchMoviesByName","query","searchParams","URLSearchParams","api_key","include_adult","fetchMovieDetails","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}