{"version":3,"file":"static/js/597.3239d897.chunk.js","mappings":"0OAiEA,UA7Da,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,sGAElBJ,GAAa,GAFK,UAGKK,EAAAA,EAAAA,IAAeX,GAHpB,gBAGVY,EAHU,EAGVA,KACRC,QAAQC,IAAIF,GACZR,EAAaQ,GALK,kDAOlBJ,EAAS,8CAPS,yBASlBF,GAAa,GATK,6EAAH,qDAYnBI,GACD,GAAE,CAACV,KAGF,8BACGO,GACC,uBAAIA,KAEJ,gCACGF,IAAa,SAAC,IAAD,IACQ,IAArBF,EAAUY,QAAiBR,GAG1B,wBACGJ,EAAUa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACb,2BACE,gBACEC,IACED,EAAY,yCAC0BA,GAClC,uEAENE,IAAKH,EACLI,MAAM,MACNC,OAAO,SAET,wBACE,0BAAOL,OAET,wBACE,0BAAOD,QAfFD,EADI,OAHjB,+DA6BX,C,mMC9DKQ,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,yFAEGC,EAFH,UAEYJ,EAFZ,uCAEmDC,EAFnD,gCAEkFE,GAFlF,SAIoBE,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,OAKHlB,QAAQC,IAAIiB,EAASC,KAAKC,SALvB,kBAMIF,EAASC,MANb,gCAQHnB,QAAQN,MAAR,MARG,gFAYA,SAAe2B,EAAtB,iDAAO,OAAP,oBAAO,WAAiCN,EAAMO,GAAvC,2FAEGC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTH,MAAOA,EACPP,KAAMA,EACNW,eAAe,IAEXV,EARH,UAQYJ,EARZ,wBAQoCW,GARpC,SASoBN,EAAAA,EAAAA,IAAUD,GAT9B,cASGE,EATH,yBAWIA,EAASC,MAXb,gCAaHnB,QAAQN,MAAR,MAbG,gFAiBA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCvB,GAAjC,yFAEGY,EAFH,UAEYJ,EAFZ,iBAE6BR,EAF7B,oBAE2CS,GAF3C,SAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,OAIHlB,QAAQC,IAAIiB,GAJT,kBAKIA,EAASC,MALb,gCAOHnB,QAAQN,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BM,GAA9B,yFAEGY,EAFH,UAEYJ,EAFZ,iBAE6BR,EAF7B,4BAEmDS,EAFnD,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,OAIHlB,QAAQC,IAAIiB,GAJT,kBAKIA,EAASC,MALb,gCAOHnB,QAAQN,MAAR,MAPG,gFAWA,SAAekC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCxB,GAAjC,yFAEGY,EAFH,UAEYJ,EAFZ,iBAE6BR,EAF7B,4BAEmDS,EAFnD,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,OAIHlB,QAAQC,IAAIiB,GAJT,kBAKIA,EAASC,MALb,gCAOHnB,QAAQN,MAAR,MAPG,gF","sources":["components/Cast.jsx","services/movie-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieCast } from 'services/movie-api';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader/Loader';\nconst Cast = () => {\n  const { Id } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMovieCast(Id);\n        console.log(cast);\n        setMovieCast(cast);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadMovieCast();\n  }, [Id]);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          {isLoading && <Loader />}\n          {movieCast.length === 0 && !error ? (\n            <h2>We didn't find info about cast</h2>\n          ) : (\n            <ul>\n              {movieCast.map(({ id, character, name, profile_path }) => (\n                <li key={id}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                        : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n                    }\n                    alt={name}\n                    width=\"150\"\n                    height=\"200\"\n                  />\n                  <p>\n                    <span>{name}</span>\n                  </p>\n                  <p>\n                    <span>{character}</span>\n                  </p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92d66af10495782dbf7116658cb2e14f';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    console.log(response.data.results);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '92d66af10495782dbf7116658cb2e14f',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Id","useParams","useState","movieCast","setMovieCast","isLoading","setIsLoading","error","setError","useEffect","loadMovieCast","fetchMovieCast","cast","console","log","length","map","id","character","name","profile_path","src","alt","width","height","BASE_URL","API_KEY","fetchTrendingMovies","page","url","axios","response","data","results","fetchMoviesByName","query","searchParams","URLSearchParams","api_key","include_adult","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}