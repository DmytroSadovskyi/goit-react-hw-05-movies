{"version":3,"file":"static/js/257.bc549a23.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/movie-api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 10px 20px;\n`;\nexport const GoBackLink = styled(Link)`\n  display: inline-block;\n  padding: 8px 12px;\n  text-decoration: none;\n  color: white;\n  background-color: blue;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieTitle = styled.h1`\n  margin-bottom: 15px;\n  text-align: center;\n`;\n\nexport const MoviePosterWrapper = styled.div`\n  width: 150px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin: 0 auto;\n  margin-bottom: 15px;\n  text-align: center;\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const MoviePoster = styled.img`\n  display: block;\n  margin-right: 10px;\n`;\n\nexport const UserScore = styled.span`\n  margin-bottom: 10px;\n`;\n\nexport const ListOfLinks = styled.ul`\n  display: flex;\n  gap: 5px;\n  margin-bottom: 15px;\n`;\n\nexport const InfoLink = styled(Link)`\n  display: inline-block;\n  padding: 8px 12px;\n  text-decoration: none;\n  color: black;\n  background-color: gainsboro;\n  border-radius: 5px;\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/movie-api';\nimport { useState, useEffect, useRef } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Section,\n  GoBackLink,\n  MovieTitle,\n  MoviePosterWrapper,\n  MoviePoster,\n  UserScore,\n  ListOfLinks,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { Id } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const result = await fetchMovieDetails(Id);\n        setMovieInfo(result);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadMovieDetails();\n  }, [Id]);\n\n  const { title, release_date, poster_path, vote_average, overview } =\n    movieInfo;\n\n  return (\n    <main>\n      <Section>\n        <GoBackLink to={backLinkLocationRef.current}>Go Back</GoBackLink>\n        {error ? (\n          <p>{error}</p>\n        ) : (\n          <>\n            {isLoading && <Loader />}\n            <MovieTitle>\n              {title}(\n              {release_date?.slice(0, 4)\n                ? release_date?.slice(0, 4)\n                : 'Unknown'}\n              )\n            </MovieTitle>\n            <MoviePosterWrapper>\n              <MoviePoster\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://dummyimage.com/500x400/ff6b08/fff.jpg&text=Opps,+no+image...'\n                }\n                alt={title}\n                width=\"150\"\n                height=\"200\"\n              />\n              <UserScore>\n                User score: {Math.round(vote_average * 10)}%\n              </UserScore>\n            </MoviePosterWrapper>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <ListOfLinks>\n              <li>\n                <InfoLink to=\"cast\">Cast</InfoLink>\n              </li>\n              <li>\n                <InfoLink to=\"reviews\">Reviews</InfoLink>\n              </li>\n            </ListOfLinks>\n\n            <Outlet />\n          </>\n        )}\n      </Section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92d66af10495782dbf7116658cb2e14f';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    console.log(response.data.results);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '92d66af10495782dbf7116658cb2e14f',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Section","styled","GoBackLink","Link","MovieTitle","MoviePosterWrapper","MoviePoster","UserScore","ListOfLinks","InfoLink","Id","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","useEffect","loadMovieDetails","fetchMovieDetails","result","title","release_date","poster_path","vote_average","overview","to","current","Loader","slice","src","alt","width","height","Math","round","BASE_URL","API_KEY","fetchTrendingMovies","page","url","axios","response","console","log","data","results","fetchMoviesByName","query","searchParams","URLSearchParams","api_key","include_adult","id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}