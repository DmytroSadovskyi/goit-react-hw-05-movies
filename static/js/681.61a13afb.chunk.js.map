{"version":3,"file":"static/js/681.61a13afb.chunk.js","mappings":"0OAsDA,UAjDgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,0GAErBJ,GAAa,GAFQ,UAG0BK,EAAAA,EAAAA,IAAkBb,GAH5C,gBAGbc,EAHa,EAGbA,KAAMC,EAHO,EAGPA,QAASC,EAHF,EAGEA,cACvBZ,EAAgBW,GAChBT,EAAgBU,GAChBC,QAAQC,IAAIJ,GANS,kDAQrBJ,EAAS,8CARY,yBAUrBF,GAAa,GAVQ,6EAAH,qDAatBI,GACD,GAAE,CAACZ,KAGF,8BACGS,GACC,uBAAIA,KAEJ,gCACGF,IAAa,SAAC,IAAD,IACI,IAAjBF,GAAuBI,GAGtB,wBACGN,EAAagB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADO,OAHpB,0EAeX,C,mMCnDKG,EAAW,gCACXC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,yFAEGC,EAFH,UAEYJ,EAFZ,uCAEmDC,EAFnD,gCAEkFE,GAFlF,SAIoBE,EAAAA,EAAAA,IAAUD,GAJ9B,cAIGE,EAJH,OAKHZ,QAAQC,IAAIW,EAASf,KAAKC,SALvB,kBAMIc,EAASf,MANb,gCAQHG,QAAQR,MAAR,MARG,gFAYA,SAAeqB,EAAtB,iDAAO,OAAP,oBAAO,WAAiCJ,EAAMK,GAAvC,2FAEGC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTH,MAAOA,EACPL,KAAMA,EACNS,eAAe,IAEXR,EARH,UAQYJ,EARZ,wBAQoCS,GARpC,SASoBJ,EAAAA,EAAAA,IAAUD,GAT9B,cASGE,EATH,yBAWIA,EAASf,MAXb,gCAaHG,QAAQR,MAAR,MAbG,gFAiBA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAiChB,GAAjC,yFAEGO,EAFH,UAEYJ,EAFZ,iBAE6BH,EAF7B,oBAE2CI,GAF3C,SAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,OAIHZ,QAAQC,IAAIW,GAJT,kBAKIA,EAASf,MALb,gCAOHG,QAAQR,MAAR,MAPG,gFAWA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAA8BjB,GAA9B,yFAEGO,EAFH,UAEYJ,EAFZ,iBAE6BH,EAF7B,4BAEmDI,EAFnD,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,OAIHZ,QAAQC,IAAIW,GAJT,kBAKIA,EAASf,MALb,gCAOHG,QAAQR,MAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCO,GAAjC,yFAEGO,EAFH,UAEYJ,EAFZ,iBAE6BH,EAF7B,4BAEmDI,EAFnD,4BAGoBI,EAAAA,EAAAA,IAAUD,GAH9B,cAGGE,EAHH,OAIHZ,QAAQC,IAAIW,GAJT,kBAKIA,EAASf,MALb,gCAOHG,QAAQR,MAAR,MAPG,gF","sources":["components/Reviews.jsx","services/movie-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/movie-api';\nimport { useParams } from 'react-router-dom';\nimport Loader from './Loader/Loader';\n\nconst Reviews = () => {\n  const { Id } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadMovieReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { data, results, total_results } = await fetchMovieReviews(Id);\n        setMovieReviews(results);\n        setTotalResults(total_results);\n        console.log(data);\n      } catch (error) {\n        setError('Error while loading data. Try again later.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadMovieReviews();\n  }, [Id]);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          {isLoading && <Loader />}\n          {totalResults === 0 && !error ? (\n            <h2>We didn't find any reviews for this movie</h2>\n          ) : (\n            <ul>\n              {movieReviews.map(({ id, author, content }) => (\n                <li key={id}>\n                  <h3>{author}</h3>\n                  <p>{content}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '92d66af10495782dbf7116658cb2e14f';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const url = `${BASE_URL}trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n\n    const response = await axios.get(url);\n    console.log(response.data.results);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMoviesByName(page, query) {\n  try {\n    const searchParams = new URLSearchParams({\n      api_key: '92d66af10495782dbf7116658cb2e14f',\n      query: query,\n      page: page,\n      include_adult: false,\n    });\n    const url = `${BASE_URL}search/movie?${searchParams}`;\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieDetails(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieCast(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  try {\n    const url = `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Id","useParams","useState","movieReviews","setMovieReviews","totalResults","setTotalResults","isLoading","setIsLoading","error","setError","useEffect","loadMovieReviews","fetchMovieReviews","data","results","total_results","console","log","map","id","author","content","BASE_URL","API_KEY","fetchTrendingMovies","page","url","axios","response","fetchMoviesByName","query","searchParams","URLSearchParams","api_key","include_adult","fetchMovieDetails","fetchMovieCast"],"sourceRoot":""}